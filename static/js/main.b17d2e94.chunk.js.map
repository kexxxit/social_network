{"version":3,"sources":["api/api.js","components/nav/nav.module.css","components/header/header.module.css","components/common/Preloader.js","redux/reducers/profileReducer.js","redux/reducers/dialogsReducer.js","redux/reducers/usersReducer.js","components/header/header.jsx","redux/reducers/authReducer.js","components/header/headerContainer.jsx","components/nav/nav.jsx","components/nav/navContainer.jsx","components/validators/validators.js","components/login/login.jsx","components/login/loginContainer.jsx","redux/reducers/appReducer.js","App.js","reportWebVitals.js","redux/redux_store.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","userAPI","profileAPI","instance","axios","create","baseURL","withCredentials","headers","API-KEY","getUsers","currentPage","pageSize","get","concat","then","response","data","deleteFollow","id","delete","postFollow","post","login","auth","email","password","rememberMe","logout","getProfile","userId","getStatus","updateStatus","status","put","module","exports","nav","activated","header","logo","login__block","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Preloader","props","a","createElement","src","initialState","postData","likesCount","repostCount","comments","imgUrl","date","text","friendsData","avatarUrl","setStatusActionCreator","type","setUser","_ref","Object","C_Users_kexxxit_Desktop_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_kexxxit_Desktop_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","apply","this","arguments","addNewPost","postContent","addPostActionCreator","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","resultCode","_x3","profileReducer","state","length","undefined","action","newPost","C_Users_kexxxit_Desktop_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","C_Users_kexxxit_Desktop_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","userData","name","messagesData","message","avatarLink","senderName","newMessageBody","sendMessageActionCreator","messageText","sendMessageUpdater","dialogsReducer","stateCopy","C_Users_kexxxit_Desktop_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","newMessage","C_Users_kexxxit_Desktop_react_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","push","body","users","totalUsersCount","isFetching","followingList","followSuccess","userID","unfollowSuccess","setUsers","setIsFetching","setFollowingProgress","isFollowingProgress","requestUsers","page","items","totalCount","setPage","followUnfollowLogic","Action","apiMethod","_x4","_x5","_x6","follow","_ref4","_callee4","_context4","bind","_x7","unfollow","_ref5","_callee5","_context5","_x8","usersReducer","map","u","followed","filter","Header","react_default","className","styles","isAuth","onClick","logoutData","dist","to","setUserData","asyncToGenerator","regenerator_default","_response$data","authReducer","objectSpread","HeaderContainer","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","React","Component","connect","Nav","isActive","_ref6","navAPI","NavContainer","required","maxLengthCreator","maxLength","composeValidators","_len","validators","Array","_key","reduce","error","validator","Login","_getPrototypeOf2","_this","args","call","onSubmit","values","loginData","defineProperty","FORM_ERROR","_this2","react_final_form_es","initialValues","render","submitError","handleSubmit","form","submitting","pristine","validate","input","meta","assign","placeholder","touched","style","color","react_final_form_listeners_es","previous","inputEmailUpdater","inputPasswordUpdater","console","log","LoginAPI","react_router_dist","login_login","LoginContainer","abrupt","initialized","appReducer","ProfileContainer","lazy","e","MessagesContainer","UsersContainer","App","initialize","headerContainer","navContainer","Suspense","fallback","path","element","loginContainer","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","profilePage","messagesPage","usersPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","src_renderTree","renderTree","ReactDOM","StrictMode","es","src_App_0","document","getElementById","getState"],"mappings":"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","file":"static/js/main.b17d2e94.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"0b4577d6-aeb8-4b30-af7f-00b18e31fa58\"\r\n    }\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    deleteFollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    postFollow(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    login() {\r\n        return instance.get(`auth/me`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    auth(email, password, rememberMe) {\r\n        return instance.post(`auth/login`, {email: email, password: password, rememberMe: rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__1OO7-\",\"activated\":\"nav_activated__1ba_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__CdjMB\",\"logo\":\"header_logo__Cnuy7\",\"login__block\":\"header_login__block__2-JpV\"};","import React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={'https://media.tenor.com/wpSo-8CrXqUAAAAi/loading-loading-forever.gif'}/>\r\n}\r\n\r\nexport default Preloader","import {profileAPI} from \"../../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST'\r\nconst SET_USER = 'profile/SET-USER'\r\nconst SET_STATUS = 'profile/SET_STATUS'\r\n\r\nlet initialState = {\r\n    postData: [{\r\n        id: '1',\r\n        likesCount: 100,\r\n        repostCount: 100,\r\n        comments: [],\r\n        imgUrl: 'empty',\r\n        date: '01.10.2020',\r\n        text: ''\r\n    },\r\n        {id: '2', likesCount: 100, repostCount: 100, comments: [], imgUrl: 'empty', date: '01.10.2020', text: 'qwe'},\r\n        {id: '3', likesCount: 100, repostCount: 100, comments: [], imgUrl: 'empty', date: '01.10.2020', text: 'eqwe'}],\r\n    friendsData: [\r\n        {id: '1', avatarUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/9a/Gull_portrait_ca_usa.jpg'},\r\n        {id: '2', avatarUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/9a/Gull_portrait_ca_usa.jpg'},\r\n        {id: '3', avatarUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/9a/Gull_portrait_ca_usa.jpg'},\r\n        {id: '4', avatarUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/9a/Gull_portrait_ca_usa.jpg'},\r\n        {id: '5', avatarUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/9a/Gull_portrait_ca_usa.jpg'},\r\n        {id: '6', avatarUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/9a/Gull_portrait_ca_usa.jpg'},\r\n        {id: '7', avatarUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/9a/Gull_portrait_ca_usa.jpg'},\r\n        {id: '8', avatarUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/9a/Gull_portrait_ca_usa.jpg'},\r\n    ],\r\n    data: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST :\r\n            let newPost = {\r\n                id: '4',\r\n                likesCount: 0,\r\n                repostCount: 0,\r\n                comments: [],\r\n                imgUrl: 'empty',\r\n                date: '01.10.2020',\r\n                text: action.postContent\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                postData: [newPost, ...state.postData]\r\n            }\r\n            break\r\n        case SET_USER :\r\n            let data = action.data\r\n            let newState = {...state, data}\r\n            return newState\r\n        case SET_STATUS :\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (postContent) => ({type: ADD_POST, postContent: postContent})\r\nexport const setUserActionCreator = (data) => ({type: SET_USER, data: data})\r\nexport const setStatusActionCreator = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const setUser = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getProfile(userId)\r\n        dispatch(setUserActionCreator(response))\r\n    }\r\n}\r\n\r\nexport const addNewPost = (postContent) => {\r\n    return (dispatch) => {\r\n        dispatch(addPostActionCreator(postContent))\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatusActionCreator(response.data))\r\n\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatusActionCreator(status))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default profileReducer","const SEND_MESSAGE = 'dialogs/SEND-MESSAGE'\r\nconst SEND_MESSAGE_UPDATER = 'dialogs/SEND-MESSAGE-UPDATER'\r\n\r\nlet initialState = {\r\n    userData: [\r\n        {id: 1, name: 'Шлепок'},\r\n        {id: 2, name: 'Шлепун'},\r\n        {id: 3, name: 'Шептун'},\r\n        {id: 4, name: 'Булгур'},\r\n        {id: 5, name: 'Кулпа'},\r\n        {id: 6, name: 'Жепок'},\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: 'Шлепок', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'input', senderName: 'he'},\r\n        {id: 2, message: 'Шлепун', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'output', senderName: 'you'},\r\n        {id: 3, message: 'Шептун', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'input', senderName: 'he'},\r\n        {id: 4, message: 'Булгур', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'output', senderName: 'you'},\r\n        {id: 5, message: 'Кулпа', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'input', senderName: 'he'},\r\n        {id: 6, message: 'Жепок', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'output', senderName: 'you'},\r\n        {id: 1, message: 'Шлепок', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'input', senderName: 'he'},\r\n        {id: 2, message: 'Шлепун', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'output', senderName: 'you'},\r\n        {id: 3, message: 'Шептун', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'input', senderName: 'he'},\r\n        {id: 4, message: 'Булгур', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'output', senderName: 'you'},\r\n        {id: 5, message: 'Кулпа', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'input', senderName: 'he'},\r\n        {id: 6, message: 'Жепок', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'output', senderName: 'you'},\r\n        {id: 1, message: 'Шлепок', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'input', senderName: 'he'},\r\n        {id: 2, message: 'Шлепун', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'output', senderName: 'you'},\r\n        {id: 3, message: 'Шептун', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'input', senderName: 'he'},\r\n        {id: 4, message: 'Булгур', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'output', senderName: 'you'},\r\n        {id: 5, message: 'Кулпа', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'input', senderName: 'he'},\r\n        {id: 6, message: 'Жепок', date: '1 мар. 2020 12:02', avatarLink: 'empty', status: 'output', senderName: 'you'},\r\n    ],\r\n    newMessageBody: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy = {...state}\r\n    switch (action.type) {\r\n        case SEND_MESSAGE :\r\n            let newMessage = {\r\n                id: 6,\r\n                message: action.messageText,\r\n                date: '1 мар. 2020 12:02',\r\n                avatarLink: 'empty',\r\n                status: 'output',\r\n                senderName: 'you'\r\n            }\r\n            stateCopy.messagesData = [...state.messagesData]\r\n            stateCopy.messagesData.push(newMessage)\r\n            stateCopy.newMessageBody = ''\r\n\r\n            return stateCopy\r\n            break\r\n        case SEND_MESSAGE_UPDATER :\r\n            stateCopy.newMessageBody = action.body\r\n            return stateCopy\r\n            break\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreator = (messageText) => ({type: SEND_MESSAGE, messageText: messageText})\r\nexport const sendMessageUpdater = (messageText) => ({type: SEND_MESSAGE_UPDATER, messageText: messageText})\r\n\r\nexport default dialogsReducer","import {userAPI} from \"../../api/api\";\r\n\r\nconst FOLLOW = 'users/FOLLOW'\r\nconst UNFOLLOW = 'users/UNFOLLOW'\r\nconst SET_USERS = 'users/SET-USERS'\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET-TOTAL-USERS-COUNT'\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING = 'users/TOGGLE-IS-FOLLOWING'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 36,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingList: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n            break\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n            break\r\n        case SET_USERS :\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE :\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT :\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case TOGGLE_IS_FETCHING :\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING :\r\n            return {\r\n                ...state,\r\n                followingList: action.isFollowingProgress ? [...state.followingList, action.userId] : state.followingList.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const followSuccess = (id) => ({type: FOLLOW, userID: id})\r\nexport const unfollowSuccess = (id) => ({type: UNFOLLOW, userID: id})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount})\r\nexport const setIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const setFollowingProgress = (isFollowingProgress, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING,\r\n    isFollowingProgress: isFollowingProgress,\r\n    userId: userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true))\r\n        let response = await userAPI.getUsers(page, pageSize)\r\n        dispatch(setIsFetching(false))\r\n        dispatch(setUsers(response.items))\r\n        dispatch(setUsersTotalCount(response.totalCount))\r\n\r\n    }\r\n}\r\n\r\nexport const setPage = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        let response = await userAPI.getUsers(page, pageSize)\r\n        dispatch(setIsFetching(false))\r\n        dispatch(setUsers(response.items))\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowLogic = async (dispatch, id, Action, apiMethod) => {\r\n    dispatch(setFollowingProgress(true, id))\r\n    let response = await apiMethod(id)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(Action(id))\r\n    }\r\n    dispatch(setFollowingProgress(false, id))\r\n\r\n}\r\n\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        followUnfollowLogic(dispatch,id,userAPI.postFollow.bind(userAPI),followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        followUnfollowLogic(dispatch, id, userAPI.deleteFollow.bind(userAPI), unfollowSuccess())\r\n    }\r\n}\r\n\r\nexport default usersReducer","import styles from \"./header.module.css\"\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n\r\n    return (\r\n        <header className={styles.header}>\r\n            <img className={styles.logo} src=\"https://assets-global.website-files.com/5e3177cecf36f6591e4e38cb/5ea2a86505e63bdd814cf868_Logo.png\"/>\r\n            <div className={styles.login__block }>\r\n                {props.isAuth ? <div><div>{props.login}</div><button onClick={props.logoutData}>Logout</button></div> : <NavLink to={'/login'}>login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {userAPI} from \"../../api/api\";\r\n\r\nconst SET_USER_DATA = 'auth/SET-USER-DATA'\r\nconst SET_USER_LOGIN_DATA = 'auth/SET-USER-LOGIN-DATA'\r\nconst INPUT_EMAIL_UPDATER = 'auth/INPUT-LOGIN-UPDATER'\r\nconst INPUT_PASSWORD_UPDATER = 'auth/INPUT-PASSWORD-UPDATER'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    password: null,\r\n    rememberMe: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n\r\n            }\r\n        case SET_USER_LOGIN_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case INPUT_PASSWORD_UPDATER :\r\n            return {\r\n                ...state,\r\n                password: action.text\r\n            }\r\n        case INPUT_EMAIL_UPDATER :\r\n            return {\r\n                ...state,\r\n                email: action.text\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, email, login, isAuth}\r\n})\r\nexport const inputEmailUpdater = (text) => ({type: INPUT_EMAIL_UPDATER, text})\r\nexport const inputPasswordUpdater = (text) => ({type: INPUT_PASSWORD_UPDATER, text})\r\n\r\nexport const auth = () => {\r\n    return async (dispatch) => {\r\n        let response = await userAPI.login()\r\n        if (response.resultCode === 0) {\r\n            let {id, email, login} = response.data\r\n            dispatch(setUserData(id, email, login, true))\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginData = (email, password, rememberMe) => {\r\n    return async dispatch => {\r\n        let response = await userAPI.auth(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(auth())\r\n        } else {\r\n            return (response.data)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const logoutData = () => {\r\n    return async dispatch => {\r\n        let response = await userAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserData(null, null, null, false))\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer","import React from \"react\";\r\nimport Header from \"./header\";\r\nimport {logoutData} from \"../../redux/reducers/authReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth, login: state.auth.login})\r\n\r\nexport default connect(mapStateToProps, {logoutData})(HeaderContainer)","import styles from './nav.module.css'\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nfunction Nav(props) {\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <NavLink className={({ isActive }) => (isActive ? styles.activated : undefined)} to={`/profile`}>Profile</NavLink>\r\n            <NavLink className={({ isActive }) => (isActive ? styles.activated : undefined)} to='/messages'>Messages</NavLink>\r\n            <NavLink className={({ isActive }) => (isActive ? styles.activated : undefined)} to='/users'>Users</NavLink>\r\n            <NavLink className={({ isActive }) => (isActive ? styles.activated : undefined)} to='@'>News</NavLink>\r\n            <NavLink className={({ isActive }) => (isActive ? styles.activated : undefined)} to='@'>Music</NavLink>\r\n            <NavLink className={({ isActive }) => (isActive ? styles.activated : undefined)} to='@'>Settings</NavLink>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Nav from \"./nav\";\r\n\r\nclass navAPI extends React.Component {\r\n\r\n    render() {\r\n        return <Nav {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth, userId: state.auth.userId})\r\n\r\nconst NavContainer = connect(mapStateToProps, {})(navAPI)\r\n\r\nexport default NavContainer","import React from \"react\";\r\n\r\nexport const required = value => (value ? undefined : 'Required')\r\n\r\nexport const maxLengthCreator = maxLength => (value) => ( value.length <= maxLength ? undefined : `Max length is ${maxLength}`)\r\n\r\nexport const composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\n","import React from \"react\";\r\nimport {Form, Field} from 'react-final-form'\r\nimport {OnChange} from \"react-final-form-listeners\";\r\nimport {maxLengthCreator, required, composeValidators} from \"../validators/validators\";\r\nimport { FORM_ERROR } from 'final-form'\r\n\r\n\r\nclass Login extends React.Component {\r\n    onSubmit = async values => {\r\n        let promise = this.props.loginData(values.email, values.password, values.rememberMe)\r\n        promise.then((response) => {\r\n            if (!this.props.isAuth) {\r\n                return {[FORM_ERROR]: \"error\"}\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n\r\n        return <div>\r\n            <h1>Login</h1>\r\n            <Form onSubmit={this.onSubmit}\r\n                  initialValues={{rememberMe: false}}\r\n                  render={({submitError, handleSubmit, form, submitting, pristine, values}) => (\r\n                      <form onSubmit={handleSubmit}>\r\n                          <div>\r\n                              <Field name=\"email\" validate={composeValidators(required, maxLengthCreator(30))}>\r\n                                  {({input, meta}) => (\r\n                                      <div>\r\n                                          <div>Email:</div>\r\n                                          <input {...input} type=\"text\" placeholder=\"Email\"/>\r\n                                          {meta.error && meta.touched &&\r\n                                              <span style={{color: \"red\"}}>{meta.error}</span>}\r\n                                      </div>\r\n                                  )}\r\n                              </Field>\r\n                              <OnChange name=\"email\">\r\n                                  {(value, previous) => {\r\n                                      this.props.inputEmailUpdater(value)\r\n                                  }}\r\n                              </OnChange>\r\n                          </div>\r\n                          <div>\r\n\r\n                              <Field name=\"password\" validate={composeValidators(required, maxLengthCreator(20))}>\r\n                                  {({input, meta}) => (\r\n                                      <div>\r\n                                          <div>Password:</div>\r\n                                          <input {...input} type=\"text\" placeholder=\"Password\"/>\r\n                                          {meta.error && meta.touched &&\r\n                                              <span style={{color: \"red\"}}>{meta.error}</span>}\r\n                                      </div>\r\n                                  )}\r\n                              </Field>\r\n                              <OnChange name=\"password\">\r\n                                  {(value, previous) => {\r\n                                      this.props.inputPasswordUpdater(value)\r\n                                  }}\r\n                              </OnChange>\r\n                          </div>\r\n                          <div>\r\n                              <Field name={\"rememberMe\"}>\r\n                                  {({input, meta}) => (\r\n                                      <div>\r\n                                          <input {...input} type={\"checkbox\"}/>\r\n                                          <label>Remember me</label>\r\n                                      </div>\r\n\r\n                                  )}\r\n\r\n                              </Field>\r\n                          </div>\r\n                          {console.log(submitError)}\r\n                          <button type={\"submit\"}>Login</button>\r\n\r\n                      </form>\r\n                  )}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Login","import React from \"react\";\r\nimport Login from \"./login\";\r\nimport {connect} from \"react-redux\";\r\nimport {inputEmailUpdater, inputPasswordUpdater,\r\n    loginData, logoutData} from \"../../redux/reducers/authReducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nclass LoginAPI extends React.Component {\r\n    render() {\r\n        if (this.props.isAuth) return <Navigate to={`/profile`} />\r\n        return <Login isAuth={this.props.isAuth}\r\n                      loginData={this.props.loginData}\r\n                      inputPasswordUpdater = {this.props.inputPasswordUpdater}\r\n                      inputEmailUpdater = {this.props.inputEmailUpdater}\r\n\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst LoginContainer = connect(mapStateToProps, {loginData, inputEmailUpdater, inputPasswordUpdater,logoutData})(LoginAPI)\r\n\r\nexport default LoginContainer\r\n","import {auth} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED-SUCCESSFUL'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitialized = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initialize = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(auth())\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(setInitialized())\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer","import './App.css';\nimport React from \"react\";\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport HeaderContainer from \"./components/header/headerContainer\";\nimport NavContainer from \"./components/nav/navContainer\";\nimport LoginContainer from \"./components/login/loginContainer\";\nimport {connect} from \"react-redux\";\nimport {initialize} from \"./redux/reducers/appReducer\";\nimport Preloader from \"./components/common/Preloader\";\n\nconst ProfileContainer = React.lazy(() => import('./components/profile/profile_container'));\nconst MessagesContainer = React.lazy(() => import('./components/messages/messages_container'));\nconst UsersContainer = React.lazy(() => import('./components/users/Users_container'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initialize()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n\n        return (\n            <BrowserRouter>\n                <div className=\"app-wrapper\">\n                    <HeaderContainer/>\n                    <NavContainer/>\n                    <React.Suspense fallback={<Preloader/>}>\n                        <Routes>\n                            <Route path=\"/messages\" element={<MessagesContainer/>}/>\n                            <Route path=\"/profile\" element={<ProfileContainer/>}/>\n                            <Route path=\"/profile/:userId\" element={<ProfileContainer/>}/>\n                            <Route path=\"/users\" element={<UsersContainer/>}/>\n                            <Route path=\"/login\" element={<LoginContainer/>}/>\n                        </Routes>\n                    </React.Suspense>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nexport default connect(mapStateToProps, {initialize})(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./reducers/profileReducer\";\r\nimport dialogsReducer from \"./reducers/dialogsReducer\";\r\nimport usersReducer from \"./reducers/usersReducer\";\r\nimport authReducer from \"./reducers/authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport appReducer from \"./reducers/appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux_store\";\nimport './index.css';\nimport {Provider} from \"react-redux\";\n\nexport let renderTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    )\n}\nrenderTree(store.getState)\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}