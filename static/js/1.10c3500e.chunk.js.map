{"version":3,"sources":["components/profile/user_posts/profile.module.css","components/profile/user_posts/user_post/qYayTIyBR68.jpg","components/profile/user_posts/user_post/post.jsx","components/messages/friends.jsx","components/profile/profileStatusWithHook.jsx","components/profile/profileC.jsx","components/profile/profile_container.jsx"],"names":["module","exports","profile","avatar","profile__left","profile__friends","friends__label","friends__list","page","profile__main","profile__container","profile__name","profile__info","profile__label","post","postImg","add__post","status","likeImg","comments","__webpack_require__","p","Post","React","memo","props","react_default","a","createElement","className","styles","src","textContent","Friends","ProfileStatusWithHook","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onClick","Profile","postContent","createRef","friends","profilePage","friendsData","map","friend","messages_friends","avatarUrl","posts","postData","user_post_post","text","addPost","addNewPost","data","photos","large","isOwner","type","target","files","length","updatePhoto","fullName","profileStatusWithHook","profile__value","ref","current","ProfileAPI","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","inherits","createClass","key","userId","params","setUser","getStatus","profileRefresh","prevProps","prevState","snapshot","Fragment","profileC","Component","ProfileContainer","connect","state","auth","useParams","profile_container_ProfileAPI","assign"],"mappings":"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","file":"static/js/1.10c3500e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__6J99W\",\"avatar\":\"profile_avatar__3E2EV\",\"profile__left\":\"profile_profile__left__PGXuc\",\"profile__friends\":\"profile_profile__friends__3-DuE\",\"friends__label\":\"profile_friends__label__4GMe7\",\"friends__list\":\"profile_friends__list__2sNfx\",\"page\":\"profile_page__2a3jG\",\"profile__main\":\"profile_profile__main__S4bY6\",\"profile__container\":\"profile_profile__container__1-x8D\",\"profile__name\":\"profile_profile__name__3-2mo\",\"profile__info\":\"profile_profile__info__2XiVa\",\"profile__label\":\"profile_profile__label__3mSFv\",\"post\":\"profile_post__2hgCO\",\"postImg\":\"profile_postImg__17kq5\",\"add__post\":\"profile_add__post__vKyuJ\",\"status\":\"profile_status__3ovSk\",\"likeImg\":\"profile_likeImg__10Sw9\",\"comments\":\"profile_comments__gZvdC\"};","module.exports = __webpack_public_path__ + \"static/media/qYayTIyBR68.1f9845c8.jpg\";","import styles from \"../profile.module.css\";\r\nimport postImg from \"./qYayTIyBR68.jpg\";\r\nimport React from \"react\"\r\n\r\nconst Post = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={styles.post}>\r\n            <div>\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/9/9a/Gull_portrait_ca_usa.jpg\"/>\r\n                <div>\r\n                    <div>Name Surename</div>\r\n                    <div className={styles.status}>был жив 2 мин. назад</div>\r\n                </div>\r\n            </div>\r\n            <h4>{props.textContent}</h4>\r\n            <img className={styles.postImg} src={postImg}/>\r\n            <br/>\r\n            <img className={styles.likeImg} src=\"https://clipart-best.com/img/like/like-clip-art-18.png\"/>\r\n            <img className={styles.likeImg} src='http://cdn.onlinewebfonts.com/svg/img_118478.png'/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Post","import React from \"react\";\r\n\r\nfunction Friends(props) {\r\n    return <img src={props.avatar}/>\r\n}\r\n\r\nexport default Friends","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editMode ?\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/> :\r\n                <h3 onClick={activateEditMode}>{(props.status === null) || (props.status === '') ? 'Статус отсутствует' : props.status}</h3>}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHook","import styles from './user_posts/profile.module.css'\r\nimport Post from \"./user_posts/user_post/post\";\r\nimport React from \"react\";\r\nimport Friends from \"../messages/friends\";\r\nimport ProfileStatusWithHook from \"./profileStatusWithHook\";\r\n\r\nlet Profile = (props) => {\r\n    let postContent = React.createRef()\r\n    let friends = props.profilePage.friendsData.map(friend => <Friends avatar={friend.avatarUrl}/>)\r\n    let posts = props.profilePage.postData.map(post => <Post textContent={post.text} addPost={props.addNewPost}/>)\r\n\r\n    return (\r\n        <div className={styles.profile}>\r\n            <div className={styles.profile__left}>\r\n                <div className={styles.avatar}>\r\n                    <img src={props.data === null ? '' : props.data.photos.large}/>\r\n                </div>\r\n                {props.isOwner && <input type={\"file\"} onChange={(e) => {\r\n                    if (e.target.files.length) {\r\n                        props.updatePhoto(e.target.files[0])\r\n                    }\r\n                }}/>}\r\n                <div className={styles.profile__friends}>\r\n                    <h4 className={styles.friends__label}>Fridens</h4>\r\n                    <div className={styles.friends__list}>\r\n                        {friends}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.page}>\r\n                <div className={styles.profile__main}>\r\n                    <div className={styles.profile__container}>\r\n                        <div className={styles.profile__name}>\r\n                            <h1>{props.data === null ? '' : props.data.fullName}</h1>\r\n                            <ProfileStatusWithHook status={props.status} updateStatus = {props.updateStatus}/>\r\n                        </div>\r\n                        <div>\r\n                            <div className={styles.profile__info}>\r\n                                <h3 className={styles.profile__label}>День рождения</h3>\r\n                                <h3 className={styles.profile__value}>1 марта</h3>\r\n                            </div>\r\n                            <div className={styles.profile__info}>\r\n                                <h3 className={styles.profile__label}>Город</h3>\r\n                                <h3 className={styles.profile__value}>Красноярск</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.add__post}>\r\n                    <textarea ref={postContent}></textarea>\r\n                    <button onClick={(e) => {props.addNewPost(postContent); postContent.current.value = ''}}>Опубликовать</button>\r\n                </div>\r\n                <div className={styles.posts}>\r\n                    {posts}\r\n                </div>\r\n            </div>\r\n            <div className={styles.comments}>\r\n                nnsdgsdgf\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport {\r\n    addNewPost, getStatus, setUser, updatePhoto,\r\n    updateStatus\r\n} from \"../../redux/reducers/profileReducer\";\r\nimport Profile from \"./profileC\";\r\nimport {connect} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nclass ProfileAPI extends React.Component {\r\n    profileRefresh() {\r\n        let userId = this.props.params.userId\r\n        if (!userId) {\r\n            userId = this.props.userId\r\n        }\r\n        this.props.setUser(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.profileRefresh()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.params.userId !== this.props.params.userId) {\r\n            this.profileRefresh()\r\n        }\r\n    }\r\n\r\n    addNewPost = (postContent) => {\r\n        this.props.addNewPost(postContent.current.value)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Profile profilePage={this.props.profilePage}\r\n                     addNewPost={this.addNewPost}\r\n                     data={this.props.data}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     updatePhoto={this.props.updatePhoto}\r\n                     isOwner={!this.props.params.userId}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        data: state.profilePage.data,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\n\r\nfunction withUrlDataCC(props) {\r\n    let params = useParams()\r\n    return <ProfileAPI {...props} params={params}/>\r\n}\r\n\r\nconst ProfileContainer = connect(mapStateToProps, {setUser, getStatus, updateStatus, addNewPost, updatePhoto})(withUrlDataCC)\r\n\r\nexport default ProfileContainer"],"sourceRoot":""}